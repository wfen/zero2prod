[package]
name = "zero2prod"
version = "0.1.0"
authors = ["Luca Palmieri <contact@lpalmieri.com>"]
edition = "2021"

[lib]
# We could use any path here, but we are following the community convention
# We could specify a library name using the `name` field. If unspecified,
# cargo will default to `package.name`, which is what we want.
path = "src/lib.rs"

# Notice the double square brackets: it's an array in TOML's syntax.
# We can only have one library in a project, but we can have multiple binaries!
# If you want to manage multiple libraries in the same repository
# have a look at the workspace feature - we'll cover it later on.
[[bin]]
path = "src/main.rs"
name = "zero2prod"

[dependencies]
config = "0.11"
actix-web = "4"
tokio = { version = "1", features = ["macros", "rt-multi-thread"] }
# We need the optional `derive` feature to use `serde`'s procedural macros:
# `#[derive(Serialize)]` and `#[derive(Deserialize)]`.
# The feature is not enabled by default to avoid pulling in
# unnecessary dependencies for projects that do not need it.
serde = { version = "1", features = ["derive"]}
# • runtime-actix-rustls rells sqlx to use the actix runtime for its futures and rustls
#   as TLS backend;
# • macros gives us access to sqlx::query! and sqlx::query_as!, which we will be using
#   extensively
# • postgres unlocks Postgres-specific functionality (e.g. non-standard SQL types);
# • uuid adds support for mapping SQL UUIDs to the Uuid type from the uuid crate.
#   We need it to work with our id column;
# • chrono adds support for mapping SQL timestamptz to the DateTime<T> type from the
#   chrono crate. We need it to work with our subscribed_at column;
# • migrate gives us access to the same functions used under the hood by sqlx-cli to
#   manage migrations. It will turn out to be useful for our test suite.
sqlx = { version = "0.5.13", default-features = false, features = ["runtime-actix-rustls", "macros", "postgres", "uuid", "chrono", "migrate"] }
uuid = { version = "0.8.2", features = ["v4"] }
chrono = "0.4.19"

# Dev dependencies are used exclusively when or examples
# They do not get included in the final application binary!
[dev-dependencies]
reqwest = "0.11"